<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abcsh.exercise.statement.mapper.StatementMapper">
<!--绑定后就可以定义返回值类型-->
    <resultMap id="countMap" type="Integer">
        <result column="count" jdbcType="INTEGER" javaType="Integer"/>
    </resultMap>

    <resultMap id="statementMap" type="com.abcsh.exercise.statement.entity.Statement">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="attachment" jdbcType="VARCHAR" property="attachment"/>
        <result column="time_stamp" jdbcType="VARCHAR" property="timeStamp"/>
        <result column="date" jdbcType="VARCHAR" property="date"/>
        <result column="reporter" jdbcType="VARCHAR" property="reporter"/>
    </resultMap>
<!--查询所有-->
    <select id="retrieveAllStatementList" resultMap="statementMap,countMap">
        select sql_calc_found_rows
        a.id,
        a.date,
        a.title,
        a.content,
        a.attachment,
        b.name as reporter,
        a.time_stamp
        from statement a,user b
        limit #{start},#{limit};
        select found_rows() as count;
    </select>

<!--模糊查询-->
    <select id="retrieveStatementListByRangeDate" resultMap="statementMap,countMap" parameterType="String">
        select sql_calc_found_rows
            a.id,
            a.date,
            a.title,
            a.content,
            a.attachment,
            b.name as reporter,
            a.time_stamp
        from statement a,user b
        <where>
            a.reporter=b.account
            <if test="beginDate!=null and overDate != null">
               and a.date &gt;= #{beginDate} AND a.date &lt;=   #{overDate}
            </if>
        </where>
        limit #{start},#{limit};
        select found_rows() as count;
    </select>

<!--单日查询-->
    <select id="retrieveStatementListBySingleDate" resultMap="statementMap,countMap" parameterType="String">
        select sql_calc_found_rows
            a.id,
            a.date,
            a.title,
            a.content,
            a.attachment,
            b.name as reporter,
            a.time_stamp
        from statement a,user b
        <where>
            a.reporter=b.account
            <if test="singleDate!=null">
                and a.date = #{singleDate}
            </if>
        </where>
        limit #{start},#{limit};
        select found_rows() as count;
    </select>
<!--id查询-->
    <select id="retrieveStatementById" resultType="com.abcsh.exercise.statement.entity.Statement">
        select
            a.id,
            a.date,
            a.title,
            a.content,
            a.attachment,
            b.name as reporter,
            a.time_stamp
        from statement a,user b
        where
            a.reporter=b.account
        and
            id = #{id}
    </select>
<!--新增-->
    <insert id="createStatement" parameterType="com.abcsh.exercise.statement.entity.Statement" useGeneratedKeys="true" keyProperty="id">
        insert into statement
        (
            date,
            title,
            content,
            attachment,
            reporter,
            time_stamp
        )
        values
        (
            #{date},
            #{title},
            #{content},
            #{attachment},
            #{reporter},
            #{timeStamp}
        )
    </insert>
<!--删除-->
    <delete id="deleteStatementById" parameterType="int">
        delete from statement where id = #{id}
    </delete>
<!--编辑-->
    <update id="updateStatementById" parameterType="com.abcsh.exercise.statement.entity.Statement"  useGeneratedKeys="true" keyProperty="id">
        update statement
        <trim prefix="set" suffixOverrides=",">
            <if test="date != null">date = #{date},</if>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="attachment != null">attachment = #{attachment}</if>
            <!--<if test="reporter != null">reporter = #{reporter}</if>-->
        </trim>
        where id = #{id}
    </update>


</mapper>